version: '2'
services:

  ######### JENKINS ########
  jenkins:
    image: jenkins:latest
    ports:
      - 8080:8080
      - 50000:50000
    privileged: true
    volumes:
        # enable persistent volume (warning: make sure that the local jenkins_home folder is created)
        - ~/jenkins_home:/var/jenkins_home
  postgresql:
    image: docker.bintray.io/postgres:9.5.2
    container_name: postgresql
    ports:
     - 5432:5432
    environment:
     - POSTGRES_DB=artifactory
     # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
     - POSTGRES_USER=artifactory
     - POSTGRES_PASSWORD=password
    volumes:
      - ~/postgresql_home:/var/lib/postgresql/data
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  ######### ARTIFACTORY ########
  artifactory:
    image: docker.bintray.io/jfrog/artifactory-pro:6.2.0
    container_name: artifactory
    ports:
     - 8081:8081
    depends_on:
     - postgresql
    links:
     - postgresql
    volumes:
      - ~/artifactory_home:/var/opt/jfrog/artifactory
    environment:
     - DB_TYPE=postgresql
     # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
     - DB_USER=artifactory
     - DB_PASSWORD=password
     # Add extra Java options by uncommenting the following line
     #- EXTRA_JAVA_OPTIONS=-Xmx4g
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  ######### PUPPET ########
  puppet:
    container_name: puppet
    hostname: puppet
    image: puppet/puppetserver
    ports:
      - 8140:8140
    volumes:
      - ~/puppet_home/code:/etc/puppetlabs/code/
      - ~/puppet_home/puppet/ssl:/etc/puppetlabs/puppet/ssl/
      - ~/puppet_home/puppet/serverdata:/opt/puppetlabs/server/data/puppetserver/
    # In some cases unqualified hostnames can have the .local suffix
    # added, I've seen this under Docker of Mac Beta for instance.
    # Due to needing to access PuppetDB on same hostame as signed in the
    # certificate you may need to uncommant the following lines
    #environment:
    #  - PUPPETDB_SERVER_URLS=https://puppetdb.local:8081
    #links:
    #  - puppetdb:puppetdb.local

  puppetdb-postgres:
    container_name: postgres
    image: puppet/puppetdb-postgres
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
    expose:
      - 5432
    volumes:
      - ~/puppet_home/puppetdb-postgres/data:/var/lib/postgresql/data/

  puppetdb:
    hostname: puppetdb
    image: puppet/puppetdb
    ports:
      - 8082:8080
      - 8083:8081
    volumes:
      - ~/puppet_home/puppetdb/ssl:/etc/puppetlabs/puppet/ssl/

  puppetboard:
    image: puppet/puppetboard
    ports:
      - 8002:8000

  puppetexplorer:
    image: puppet/puppetexplorer
    ports:
      - 8102:80
    read_only: true

  ######### GOGS ########
  postgres-gogs:
    image: postgres:9.5
    restart: always
    #Run with POSTGRES_USER=<your_db_user> POSTGRES_PASSWORD=<your_db_password> docker-compose up -d
    environment:
      #- "POSTGRES_USER=${POSTGRES_USER}"
      #- "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
     - "POSTGRES_USER=gogs"
     - "POSTGRES_PASSWORD=gogs"
     - "POSTGRES_DB=gogs"
    volumes:
     - "~/gogs_home:/var/lib/postgresql/data"
    networks:
     - gogs
  gogs:
    image: gogs/gogs:latest
    restart: always
    ports:
     - "10022:22"
     - "3000:3000"
    links:
     - postgres-gogs
    environment:
     - "RUN_CROND=true"
    networks:
     - gogs
    volumes:
     - "gogs-data:/data"
    depends_on:
     - postgres-gogs

networks:
  gogs:
    driver: bridge

volumes:
  db-data:
    driver: local
  gogs-data:
    driver: local
