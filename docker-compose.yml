version: '2'
services:

  ######### JENKINS ########
  jenkins:
    image: jenkins:latest
    ports:
      - 8080:8080
      - 50000:50000
    privileged: true
    volumes:
        # enable persistent volume (warning: make sure that the local jenkins_home folder is created)
        - ~/jenkins_home:/var/jenkins_home
  postgresql:
    image: docker.bintray.io/postgres:9.5.2
    container_name: postgresql
    ports:
     - 5432:5432
    environment:
     - POSTGRES_DB=artifactory
     # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
     - POSTGRES_USER=artifactory
     - POSTGRES_PASSWORD=password
    volumes:
      - ~/postgresql_home:/var/lib/postgresql/data
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  ######### PUPPET ########
  puppet:
    container_name: puppet
    hostname: puppet
    image: puppet/puppetserver
    ports:
      - 8140:8140
    volumes:
      - ~/puppet_home/code:/etc/puppetlabs/code/
      - ~/puppet_home/puppet/ssl:/etc/puppetlabs/puppet/ssl/
      - ~/puppet_home/puppet/serverdata:/opt/puppetlabs/server/data/puppetserver/
    # In some cases unqualified hostnames can have the .local suffix
    # added, I've seen this under Docker of Mac Beta for instance.
    # Due to needing to access PuppetDB on same hostame as signed in the
    # certificate you may need to uncommant the following lines
    #environment:
    #  - PUPPETDB_SERVER_URLS=https://puppetdb.local:8081
    #links:
    #  - puppetdb:puppetdb.local

  puppetdb-postgres:
    container_name: postgres
    image: puppet/puppetdb-postgres
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
    expose:
      - 5432
    volumes:
      - ~/puppet_home/puppetdb-postgres/data:/var/lib/postgresql/data/

  puppetdb:
    hostname: puppetdb
    image: puppet/puppetdb
    ports:
      - 8082:8080
      - 8083:8081
    volumes:
      - ~/puppet_home/puppetdb/ssl:/etc/puppetlabs/puppet/ssl/

  puppetboard:
    image: puppet/puppetboard
    ports:
      - 8002:8000

  puppetexplorer:
    image: puppet/puppetexplorer
    ports:
      - 8102:80
    read_only: true
redis:
  restart: always
  image: redis:3.0.7-alpine

  ######### JENKINS ########
postgresql:
  restart: always
  image: postgres:9.6.2-alpine
  environment: 
    - POSTGRES_USER=gitlab 
    - POSTGRES_PASSWORD=gitlab
    - POSTGRES_DB=gitlabhq_production
  # the following are hints on what volumes to mount if you want to persist data
  volumes:
  #	 - data/postgresql:/var/lib/postgresql:rw
     - ~/gitlab_home/postgresql:/var/lib/postgresql:rw

  gitlab:
    image: 'gitlab/gitlab-ce:9.1.0-ce.0'
    restart: always
    hostname: 'gitlab.example.com'
    links: 
      - postgresql:postgresql
      - redis:redis
    environment: 
       GITLAB_OMNIBUS_CONFIG: | 
        postgresql['enable'] = false 
        gitlab_rails['db_username'] = "gitlab"
        gitlab_rails['db_password'] = "gitlab"
        gitlab_rails['db_host'] = "postgresql"
        gitlab_rails['db_port'] = "5432" 
        gitlab_rails['db_database'] = "gitlabhq_production" 
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        redis['enable'] = false
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = '6379'
        external_url 'http://gitlab.example.com:30080'
        gitlab_rails['gitlab_shell_ssh_port'] = 30022
    ports:
    # both ports must match the port from external_url above
      - "30080:30080"
    # the mapped port must match ssh_port specified above.  
      - "30022:22"
    # the following are hints on what volumes to mount if you want to persist data
  #volumes:
    #- ~/gitlab_home/gitlab/config:/etc/gitlab:rw
    #- ~/gitlab_home/logs:/var/log/gitlab:rw
    #- ~/gitlab_home/data:/var/opt/gitlab:rw
    #	- data/gitlab/config:/etc/gitlab:rw
    #	- data/gitlab/logs:/var/log/gitlab:rw
    #	- data/gitlab/data:/var/opt/gitlab:rw
